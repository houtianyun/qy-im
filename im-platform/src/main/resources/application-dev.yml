#配置项目的数据源
spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/qy-im?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowPublicKeyRetrieval=true
    username: root
    password: root

  redis:
    host: 127.0.0.1
    port: 6379
    database: 1
    password: 123456

#防止redission启动报错
management:
  health:
    redis:
      enabled: false


  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

mybatis-plus:
  configuration:
    # 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN（下划线命名） 到经典 Java 属性名 aColumn（驼峰命名） 的类似映射
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # mapper
  mapper-locations:
    # *.xml的具体路径
    - classpath*:mapper/*.xml


minio:
  endpoint: http://127.0.0.1:9001 #内网地址
  public: http://127.0.0.1:9001  #外网访问地址
  accessKey: admin
  secretKey: 12345678
  bucketName: qy-im
  imagePath: image
  filePath: file

webrtc:
  iceServers:
    - urls: stun:stun.l.google.com:19302

# 上传模式 可选 oss或local或qiniu  （http://和最后的/一定不能去！！！）
upload:
  mode: local
  local:
    # nginx映射本地文件路径
    url: http://127.0.0.1:8300/
    # 本地文件存储路径
    path: F:/upload/qy-im/
  oss:
    url: http://Bucket域名/
    endpoint: OSS配置endpoint
    accessKeyId: OSS配置accessKeyId
    accessKeySecret: OSS配置accessKeySecret
    bucketName: OSS配置bucketName
  qiniu:
    # 域名/路径
    domain:
    # 公钥
    accessKey:
    # 私钥
    secretKey:
    # 存储空间名
    bucket:

#第三方配置信息
qq:
  app-id: appid
  check-token-url: https://graph.qq.com/oauth2.0/me?access_token={access_token}
  user-info-url: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}


